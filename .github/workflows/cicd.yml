name: "CI/CD"
on:
  pull_request:
  push:
    branches:
      - main
env:
  ENABLE_PNPM_CACHE: "false"
  SETUP_COMPLETE: "true"
jobs:
  UnitTest:
    if: env.SETUP_COMPLETE == 'true'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Unit Tests
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/unit_test.sh

      - name: Inject PATH variable for Publish to CloudFlare Pages
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/export_path.sh

      - name: Publish Test Result
        id: unit-test-report
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "test-report-unit-test-tr8team-test-sources"
          directory: test-results/unit/html
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Coverage Result
        id: unit-coverage-report
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "coverage-report-unit-test-tr8team-test-sources"
          directory: test-results/unit/coverage
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Unit Test Extractor
        id: unit-test-report-extractor
        uses: tr8team/test-sources@v1.1.0
        with:
          name: Unit Test Test Results
          url: "${{ steps.unit-test-report.outputs.url }}"
          type: "vitest-result"
          path: "./test-results/unit/result.json"

      - name: Unit Test coverage Extractor
        id: unit-coverage-report-extractor
        uses: tr8team/test-sources@v1.1.0
        with:
          name: Unit Test Test Results
          url: "${{ steps.unit-coverage-report.outputs.url }}"
          type: "vitest-istanbul-coverage"
          path: "./test-results/unit/coverage/coverage-summary.json"

    outputs:
      testResult: ${{ steps.unit-test-report-extractor.outputs.data }}
      testCoverage: ${{ steps.unit-coverage-report-extractor.outputs.data }}
  IntegrationTest:
    if: env.SETUP_COMPLETE == 'true'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials for Gattai
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Integration Tests
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/integration_test.sh

      - name: Inject PATH variable for Publish to CloudFlare Pages
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/export_path.sh

      - name: Publish Test Result
        id: integration-test-report
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "test-report-integration-test-tr8team-test-sources"
          directory: test-results/unit/html
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Coverage Result
        id: integration-coverage-report
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "coverage-report-integration-test-tr8team-test-sources"
          directory: test-results/unit/coverage
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Integration Test Extractor
        id: integration-test-report-extractor
        uses: tr8team/test-sources@v1.1.0
        with:
          name: Integration Test Test Results
          url: "${{ steps.unit-test-report.outputs.url }}"
          type: "vitest-result"
          path: "./test-results/integration/result.json"

      - name: Integration Test coverage Extractor
        id: integration-coverage-report-extractor
        uses: tr8team/test-sources@v1.1.0
        with:
          name: Integration Test Test Results
          url: "${{ steps.unit-coverage-report.outputs.url }}"
          type: "vitest-istanbul-coverage"
          path: "./test-results/integration/coverage/coverage-summary.json"
    outputs:
      testResult: ${{ steps.integration-test-report-extractor.outputs.data }}
      testCoverage: ${{ steps.integration-coverage-report-extractor.outputs.data }}

  MetadataProcessing:
    if: env.SETUP_COMPLETE == 'true'
    needs:
      - UniTest
      - IntegrationTest
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Test Tracker
        id: test-tracker
        uses: tr8team/test-tracker@v1.0.0
        with:
          data: |
            [
              ${{needs.UniTest.outputs.testResult}},
              ${{needs.UniTest.outputs.testCoverage}},
              ${{needs.IntegrationTest.outputs.testResult}},
              ${{needs.IntegrationTest.outputs.testCoverage}}
            ]
          gist_id: "3552382c230547da39350815400ee665"
          github_token: ${{ secrets.GIST_TOKEN }}
          prefix: "tr8team-test-sources"
  Build:
    if: env.SETUP_COMPLETE == 'true'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Unit Tests
        continue-on-error: true
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/build.sh
  Pre-commit:
    if: env.SETUP_COMPLETE == 'true'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Integrations Tests
        continue-on-error: true
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/pre-commit.sh

  # Only on main branch
  Release:
    needs:
      - UnitTest
      - IntegrationTest
      - Build
      - Pre-commit
    name: Release
    if: github.ref == 'refs/heads/main' &&  env.SETUP_COMPLETE == 'true'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}

      - name: Remove GitHooks
        run: rm ./.git/hooks/* || true

      - name: Build Packages
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/build.sh

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}
        run: nix-shell nix/shells.nix -A cd --run scripts/ci/release.sh
